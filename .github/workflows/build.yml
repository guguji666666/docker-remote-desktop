name: build

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 2 * * SUN'
  workflow_dispatch:

jobs:
  get_ubuntu_versions:
    runs-on: ubuntu-latest
    outputs:
      LATEST_VERSION: ${{ steps.get_versions.outputs.LATEST_VERSION }}
      LATEST_CODENAME: ${{ steps.get_versions.outputs.LATEST_CODENAME }}
      PREVIOUS_VERSION: ${{ steps.get_versions.outputs.PREVIOUS_VERSION }}
      PREVIOUS_CODENAME: ${{ steps.get_versions.outputs.PREVIOUS_CODENAME }}
    steps:
      -
        name: Get Ubuntu versions and codenames
        id: get_versions
        run: |
          echo "LATEST_VERSION=$(curl -s https://endoflife.date/ubuntu | awk '/LTS/ {print $1; exit}')" >> $GITHUB_OUTPUT
          echo "LATEST_CODENAME=$(curl -s https://endoflife.date/ubuntu | awk '/LTS/ {print tolower($2); exit}' | sed s/\'//g)" >> $GITHUB_OUTPUT
          echo "PREVIOUS_VERSION=$(curl -s https://endoflife.date/ubuntu | awk '/LTS/ {print $1}' | tail -n +2 | head -n 1)" >> $GITHUB_OUTPUT
          echo "PREVIOUS_CODENAME=$(curl -s https://endoflife.date/ubuntu | awk '/LTS/ {print tolower($2)}' | tail -n +2 | head -n 1 | sed "s/'//g")" >> $GITHUB_OUTPUT
  docker_build:
    needs: get_ubuntu_versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - ubuntu_version: ${{ needs.get_ubuntu_versions.outputs.LATEST_VERSION }}
            ubuntu_codename: ${{ needs.get_ubuntu_versions.outputs.LATEST_CODENAME }}
          - ubuntu_version: ${{ needs.get_ubuntu_versions.outputs.PREVIOUS_VERSION }}
            ubuntu_codename: ${{ needs.get_ubuntu_versions.outputs.PREVIOUS_CODENAME }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Determine tags
        uses: haya14busa/action-cond@v1.2.0
        id: tags
        with:
          cond: ${{ matrix.ubuntu_codename == needs.get_ubuntu_versions.outputs.LATEST_CODENAME }}
          if_true:
            scottyhardy/docker-remote-desktop:latest,
            scottyhardy/docker-remote-desktop:ubuntu-${{ matrix.ubuntu_codename }},
            scottyhardy/docker-remote-desktop:ubuntu-${{ matrix.ubuntu_version }}
          if_false:
            scottyhardy/docker-remote-desktop:ubuntu-${{ matrix.ubuntu_codename }},
            scottyhardy/docker-remote-desktop:ubuntu-${{ matrix.ubuntu_version }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          build-args: |
            TAG=${{ matrix.ubuntu_codename }}
          platforms:
            linux/amd64,
            linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.value }}
      -
        name: Update repo description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: scottyhardy/docker-remote-desktop
