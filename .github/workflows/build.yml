name: build

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 2 1 * *'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Lint Dockerfiles with hadolint
        run: |
          docker pull hadolint/hadolint:latest
          error_file=$(mktemp)
          find . -type f -print0 | grep -z -E 'Dockerfile(\..*)?$' | while IFS= read -r -d '' file; do
            echo "Running hadolint on $file . . ."
            if ! docker run --rm -i hadolint/hadolint < "$file"; then
              echo "error" >> "$error_file"
            fi
          done
          if [ -s "$error_file" ]; then
            echo "Hadolint found errors."
            rm "$error_file"
            exit 1
          fi
          rm "$error_file"

      - name: Lint shell scripts with ShellCheck
        run: |
          docker pull koalaman/shellcheck:latest
          error_found=0
          find . -type f -not -path './.*' -exec grep -Iq '^#!.*sh' {} \; -print0 | while IFS= read -r -d '' file; do
            echo "Running shellcheck on $file . . ."
            if ! docker run --rm -v "$PWD:/scripts" koalaman/shellcheck "/scripts/$file"; then
              error_found=1
            fi
          done
          if [ "$error_found" -ne 0 ]; then
            echo "ShellCheck found errors."
            exit 1
          fi

  docker_build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to local Docker instance
        uses: docker/build-push-action@v4
        with:
          load: true
          tags: docker-remote-desktop

      - name: Extract Debian version from image
        id: extract_version
        run: |
          {
            echo "DEBIAN_CODENAME=$(docker run --rm docker-remote-desktop grep VERSION_CODENAME= /etc/os-release | cut -d= -f2)"
            echo "DEBIAN_MAJOR_VERSION=$(docker run --rm docker-remote-desktop cat /etc/debian_version | cut -d. -f1)"
            echo "DEBIAN_VERSION=$(docker run --rm docker-remote-desktop cat /etc/debian_version)"
          } | tee -a "${GITHUB_OUTPUT}"

      - name: Get current date
        id: get_date
        run: |
          echo "DATE=$(date +%Y%m%d)" | tee -a "${GITHUB_OUTPUT}"

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: |
            linux/amd64,
            linux/arm64
          push: true
          tags: |
            scottyhardy/docker-remote-desktop,
            scottyhardy/docker-remote-desktop:debian,
            scottyhardy/docker-remote-desktop:debian-${{ steps.extract_version.outputs.DEBIAN_CODENAME }},
            scottyhardy/docker-remote-desktop:debian-${{ steps.extract_version.outputs.DEBIAN_MAJOR_VERSION }},
            scottyhardy/docker-remote-desktop:debian-${{ steps.extract_version.outputs.DEBIAN_VERSION }},
            scottyhardy/docker-remote-desktop:debian-${{ steps.extract_version.outputs.DEBIAN_VERSION }}-${{ steps.extract_version.outputs.DATE }}

      - name: Update Docker Hub repository description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: scottyhardy/docker-remote-desktop
