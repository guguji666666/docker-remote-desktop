name: test

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  get_ubuntu_versions:
    runs-on: ubuntu-latest
    outputs:
      latest_lts_version: ${{ steps.get_versions.outputs.LATEST_LTS_VERSION }}
      latest_lts_codename: ${{ steps.get_versions.outputs.LATEST_LTS_CODENAME }}
      previous_lts_version: ${{ steps.get_versions.outputs.PREVIOUS_LTS_VERSION }}
      previous_lts_codename: ${{ steps.get_versions.outputs.PREVIOUS_LTS_CODENAME }}
    steps:
      - name: Get Ubuntu versions and codenames
        id: get_versions
        run: |
          {
            echo "LATEST_LTS_VERSION=$(curl -s https://endoflife.date/ubuntu | awk '/LTS/ { print $1; exit }')"
            echo "LATEST_LTS_CODENAME=$(curl -s https://endoflife.date/ubuntu | awk '/LTS/ { print tolower($2); exit }' | sed s/\'//g)"
            echo "PREVIOUS_LTS_VERSION=$(curl -s https://endoflife.date/ubuntu | awk '/LTS/ { print $1 }' | tail -n +2 | head -n 1)"
            echo "PREVIOUS_LTS_CODENAME=$(curl -s https://endoflife.date/ubuntu | awk '/LTS/ { print tolower($2) }' | tail -n +2 | head -n 1 | sed "s/'//g")"
          } | tee -a "$GITHUB_OUTPUT"

  docker_build:
    needs: get_ubuntu_versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - ubuntu_version: ${{ needs.get_ubuntu_versions.outputs.latest_lts_version }}
            ubuntu_codename: ${{ needs.get_ubuntu_versions.outputs.latest_lts_codename }}
          - ubuntu_version: ${{ needs.get_ubuntu_versions.outputs.previous_lts_version }}
            ubuntu_codename: ${{ needs.get_ubuntu_versions.outputs.previous_lts_codename }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          build-args: |
            TAG=${{ matrix.ubuntu_codename }}
          platforms: |
            linux/amd64,
            linux/arm64
          push: false
          tags: docker-remote-desktop:${{ matrix.ubuntu_version }}
